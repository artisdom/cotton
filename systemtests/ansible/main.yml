---
- name: dev packages
  hosts: all
  become: yes
  tasks:
  - name: apt
    apt:
      pkg:
      - emacs
      - yaml-mode
      - pkg-config
      - libudev-dev

- name: sshd lockdown
  hosts: all
  become: yes
  tasks:
  - name: PubkeyAuthentication yes
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^PubkeyAuthentication'
      line: 'PubkeyAuthentication yes'
  - name: PasswordAuthentication no
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^PasswordAuthentication'
      line: 'PasswordAuthentication no'
  - name: ChallengeResponseAuthentication no
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^ChallengeResponseAuthentication'
      line: 'ChallengeResponseAuthentication no'
  - name: UsePAM no
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^UsePAM'
      line: 'UsePAM no'
  - name: No DSA key
    file:
      path: /etc/ssh/ssh_host_dsa_key
      state: absent
  - name: No DSA key
    file:
      path: /etc/ssh/ssh_host_dsa_key.pub
      state: absent
  - name: No ECDSA key
    file:
      path: /etc/ssh/ssh_host_ecdsa_key
      state: absent
  - name: No ECDSA key
    file:
      path: /etc/ssh/ssh_host_ecdsa_key.pub
      state: absent
  - name: Good ciphers
    lineinfile:
      path: /etc/ssh/sshd_config
      create: yes
      regexp: '^Ciphers'
      line: 'Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr'
  - name: Good MACs
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^MACs'
      line: 'MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,umac-128@openssh.com'
  - name: Good KexAlgorithms
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^KexAlgorithms'
      line: 'KexAlgorithms curve25519-sha256,curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256'
  - name: AllowGroup ssh
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^AllowGroups'
      line: 'AllowGroups ssh _ssh'
  - name: PermitRootLogin no
    lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^PermitRootLogin'
      line: 'PermitRootLogin no'
      validate: /usr/sbin/sshd -t -f %s

- name: laminar user
  hosts: testrunners
  become: yes
  tasks:
  - name: create gpio group
    ansible.builtin.group:
      name: 'gpio'
      state: present
  - name: create laminar group
    ansible.builtin.group:
      name: 'laminar'
      state: present
  - name: create laminar user
    ansible.builtin.user:
      name: 'laminar'
      password: '*'
      create_home: true
      group: 'laminar'
      groups: ssh,gpio
      shell: '/bin/bash'
  - name: 'create ~laminar/.ssh'
    file:
      path: /home/laminar/.ssh
      state: directory
      owner: laminar
      group: laminar
      mode: 0700
  - name: 'authorise laminar key'
    authorized_key:
      user: laminar
      key: "{{ lookup('file', 'laminar-ssh.pub') }}"
  - name: give laminar permission over ST-Links
    copy:
      dest: /etc/udev/rules.d/99-laminar.rules
      content: |
        SUBSYSTEM=="usb", ATTRS{idVendor}=="0483", GROUP="laminar", MODE="0660"

- name: rust infrastructure
  hosts: testrunners
  become: yes
  become_user: laminar
  vars:
    ansible_common_remote_group: ssh
    ansible_shell_allow_world_readable_temp: true
  tasks:
  - name: check if cargo is installed
    shell: test -f /home/laminar/.cargo/bin/cargo
    register: cargo_exists
    ignore_errors: yes
  - name: Download Installer
    when: cargo_exists is failed
    get_url:
      url: https://sh.rustup.rs
      dest: /tmp/sh.rustup.rs
      mode: '0755'
      force: 'yes'
    tags:
      - rust
  - name: install rust/cargo
    when: cargo_exists is failed
    shell: /tmp/sh.rustup.rs -y
    tags:
      - rust
  - name: install probe-rs
    command: /home/laminar/.cargo/bin/cargo install probe-rs --features cli creates=/home/laminar/.cargo/bin/probe-rs

- name: pi hardware setup
  hosts: raspberrypis
  become: yes
  tasks:
  - name: disable SD polling
    lineinfile:
      path: /boot/firmware/config.txt
      regexp: '^dtparam=sd_poll_once'
      line: 'dtparam=sd_poll_once'
  - name: mark wifi optional
    copy:
      dest: /etc/systemd/system/systemd-networkd-wait-online.service.d/override.conf
      content: |
        [Service]
        ExecStart=
        ExecStart=/lib/systemd/systemd-networkd-wait-online --any

- name: test runner setup
  hosts: testrunners
  become: yes
  tasks:
  - name: rename eth1
    copy:
      # The "11" means it comes after the 10-raspi rule that sets eth0,
      # but before the 73-usb rule that creates the enxXXXXXXXXXXXX name
      dest: /etc/systemd/network/11-eth1.link
      content: |
        [Match]
        MACAddress={{ eth1_address }}
        [Link]
        Name=eth1
  - name: set static IP for eth1
    copy:
      dest: /etc/netplan/99-local.yaml
      content: |
        network:
          version: 2
          ethernets:
            eth1:
              addresses:
                - 192.168.3.1/24
    register: configured_ip
  - name: restart networking
    command: netplan apply
    when: configured_ip is changed
  - name: set dhcpd interface
    copy:
      dest: /etc/default/isc-dhcp-server
      content: |
        INTERFACESv4="eth1"
  - name: install dhcpd
    apt:
      pkg:
      - isc-dhcp-server
  - name: configure dhcpd
    copy:
      dest: /etc/dhcp/dhcpd.conf
      content: |
        default-lease-time 86400;
        max-lease-time 864000;
        subnet 192.168.3.0 netmask 255.255.255.0 {
          range 192.168.3.100 192.168.3.254;
          option routers 192.168.3.1;
        }
    register: configured_dhcpd
  - name: restart dhcpd
    service:
      name: isc-dhcp-server
      state: restarted
    when: configured_dhcpd is changed
  - name: install gpio (wiringpi)
    apt:
      pkg:
      - wiringpi
  - name: create gpio init script
    copy:
      dest: /usr/local/bin/init-gpios
      mode: 0755
      content: |
        #!/bin/bash
        gpio export 13 out
        chgrp gpio /sys/class/gpio/gpio13/*
        chmod g+w /sys/class/gpio/gpio13/value
  - name: init gpios on startup
    cron:
      name: init-gpios
      special_time: reboot
      job: /usr/local/bin/init-gpios
